var app = angular.module('myApp');
app.controller("jobListCtrl", function($http, $scope, inputFactory) {
   $scope.searchObject = inputFactory.returnObject();
   // $scope.items;
   console.log($scope.searchObject);
   //the functions toward the bottom are being called before this http request finishes being made!!!
   $http({
       method: 'GET',
       url: 'http://service.dice.com/api/rest/jobsearch/v1/simple.json?city=48207&direct=1&state=MI'
   }).then(function successCallback(response) {
           $scope.items = response.data.resultItemList;
           console.log($scope.items);
       },
       function errorCallback(response) {
           console.log(response);
       });
   $scope.globalMap;
   $scope.service;
   $scope.geocoder;


   function initMap(){
   $scope.globalMap = new google.maps.Map(document.getElementById('job-map'), {
       center: {
           lat: 42.2814,
           lng: -83.7483
       },
       scrollwheel: true,
       zoom: 10
       });
    }
    initMap();
    getCenter();
    getLocations();

    setTimeout(function () {
   // google.maps.event.trigger($scope.model.globalMap, 'resize');
   // $scope.model.globalMap.setCenter({
   //         lat: 42.2814,
   //         lng: -83.7483
   //     });
        initMap();
    }, 100);


    //The Dice API returns an array (currently)called $scope.items
    //First, I need to find the address and use it for the center
    //Also use the address for the center of the PlacesServices if provided
    //otherwise, use the zipcode for the center of PS
    //
    $scope.detailedMapsInfo = [];

    $scope.searchCenter = chooseCenterParam();
    function chooseCenterParam(){
        //only uses the stret address as the center if it was provided
        if ($scope.searchObject.street_address !== null){
            console.log($scope.searchObject.street_address + " " + $scope.searchObject.zipcode);
            return $scope.searchObject.street_address + " " + $scope.searchObject.zipcode;
        }
        return $scope.searchObject.zipcode;
    }

    $scope.locationsRequest = {
        query: location.company,
        location: $scope.searchCenter,
        radius: 4000, 
        // rankBy: google.maps.places.RankBy.DISTANCE, only used with Maps nearbySearch method
        //name: $scope.searchObject.company
    }; //passes information generated by the APIs from user's search parameters to getLocations function
    
    function getCenter() {
        //takes user input and centers the map on the selcted location
        chooseCenterParam();
        $scope.geocoder = new google.maps.Geocoder();
        $scope.geocoder.geocode({
            address: $scope.searchCenter,
            componentRestrictions: {
                country: 'US',
                postalCode: $scope.searchObject.zipcode
            }
        }, function(results, status) {
            if (status == 'OK') {
                $scope.globalMap.setCenter(results[0].geometry.location);
            }
        });

    }

    function addMarker(place){
        var marker = new google.maps.Marker({
            map: globalMap,
            position: place.geometry.location,
            icon: {
                url: 'http://maps.gstatic.com/mapfiles/circle.png',
                anchor: new google.maps.Point(10, 10),
                scaledSize: new google.maps.Size(10, 17)
            }
        });
    }
    console.log($scope.items);
    function getLocations() {
        console.log($scope.items); //not defined
        $scope.service = new google.maps.places.PlacesService($scope.globalMap);
        //for each item returned by the DICE API...
        $scope.items.forEach(function(location){
            $scope.service.textSearch($scope.locationsRequest, function(results, status){
                if (status == google.maps.places.PlacesServiceStatus.OK) {
                    var thisId = google.maps.places.PlaceResult.place_id;
                    console.log("unique ID for " + this.company + " is: " + thisId);
                    console.log(results[0]);
                    $scope.service.getDetails({placeId: thisId}, function(place, status){
                        if (status == google.maps.places.PlacesServiceStatus.OK) {
                            $scope.detailedMapsInfo.push(place);
                            addMarker(results[0]);
                        }
                    });
                }
            });
        });   
    }


});

// app.controller('searchOutputCtrl', function($scope, inputFactory) {

// });